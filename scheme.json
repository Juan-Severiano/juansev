{
  "openapi": "3.0.0",
  "info": {
    "title": "Coding API",
    "description": "API for the Coding portfolio platform",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Authenticate user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginAuthDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get all users with pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    },
                    "next": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          }
        }
      }
    },
    "/users/username/{username}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/owners": {
        "post": {
            "tags": ["Owners"],
            "summary": "Create a new owner",
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateOwnerDto"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Owner created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Owner"
                            }
                        }
                    }
                }
            }
        },
        "get": {
            "tags": ["Owners"],
            "summary": "Get all owners with pagination",
            "parameters": [
                {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "type": "integer",
                        "default": 1
                    }
                },
                {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "type": "integer",
                        "default": 10
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "A paginated list of owners",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Owner"
                                        }
                                    },
                                    "page": {
                                        "type": "integer"
                                    },
                                    "limit": {
                                        "type": "integer"
                                    },
                                    "next": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/owners/{id}": {
        "get": {
            "tags": ["Owners"],
            "summary": "Get an owner by ID",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Owner found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Owner"
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["Owners"],
            "summary": "Update an owner",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateOwnerDto"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Owner updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Owner"
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "tags": ["Owners"],
            "summary": "Delete an owner",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Owner deleted"
                }
            }
        }
    },
    "/certificates": {
        "post": {
            "tags": ["Certificates"],
            "summary": "Create a new certificate",
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateCertificateDto"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Certificate created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Certificate"
                            }
                        }
                    }
                }
            }
        },
        "get": {
            "tags": ["Certificates"],
            "summary": "Get all certificates with pagination",
            "parameters": [
                {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "type": "integer",
                        "default": 1
                    }
                },
                {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "type": "integer",
                        "default": 10
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "A paginated list of certificates",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Certificate"
                                        }
                                    },
                                    "page": {
                                        "type": "integer"
                                    },
                                    "limit": {
                                        "type": "integer"
                                    },
                                    "next": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/certificates/{id}": {
        "get": {
            "tags": ["Certificates"],
            "summary": "Get a certificate by ID",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Certificate found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Certificate"
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["Certificates"],
            "summary": "Update a certificate",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateCertificateDto"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Certificate updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Certificate"
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "tags": ["Certificates"],
            "summary": "Delete a certificate",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Certificate deleted"
                }
            }
        }
    },
    "/links": {
        "post": {
            "tags": ["Links"],
            "summary": "Create a new link",
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateLinkDto"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Link created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Link"
                            }
                        }
                    }
                }
            }
        },
        "get": {
            "tags": ["Links"],
            "summary": "Get all links with pagination",
            "parameters": [
                {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "type": "integer",
                        "default": 1
                    }
                },
                {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "type": "integer",
                        "default": 10
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "A paginated list of links",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Link"
                                        }
                                    },
                                    "page": {
                                        "type": "integer"
                                    },
                                    "limit": {
                                        "type": "integer"
                                    },
                                    "next": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/links/{id}": {
        "get": {
            "tags": ["Links"],
            "summary": "Get a link by ID",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Link found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Link"
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["Links"],
            "summary": "Update a link",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateLinkDto"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Link updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Link"
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "tags": ["Links"],
            "summary": "Delete a link",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Link deleted"
                }
            }
        }
    },
    "/attaches/upload": {
      "post": {
        "tags": ["Attaches"],
        "summary": "Upload a file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attach"
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "post": {
        "tags": ["Companies"],
        "summary": "Create a new company",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateCompanyDto"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "photo": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Company created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "post": {
        "tags": ["Projects"],
        "summary": "Create a new project",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectDto"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cover": {
                        "type": "string",
                        "format": "binary"
                      },
                      "photo": {
                        "type": "string",
                        "format": "binary"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "binary"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginAuthDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "AuthResult": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["owner", "commun"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["owner", "commun"]
          }
        },
        "required": ["username", "name", "password", "email", "role"]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["owner", "commun"]
          }
        }
      },
      "Owner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateOwnerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": ["name", "email", "phone"]
      },
      "UpdateOwnerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "Certificate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "workload": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateCertificateDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "workload": {
            "type": "integer"
          }
        },
        "required": ["title", "description", "platform", "url", "workload"]
      },
      "UpdateCertificateDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "workload": {
            "type": "integer"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "github": {
            "type": "string",
            "format": "uri"
          },
          "figma": {
            "type": "string",
            "format": "uri"
          },
          "publicUrl": {
            "type": "string",
            "format": "uri"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateLinkDto": {
        "type": "object",
        "properties": {
          "github": {
            "type": "string",
            "format": "uri"
          },
          "figma": {
            "type": "string",
            "format": "uri"
          },
          "publicUrl": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": ["github", "figma", "publicUrl"]
      },
      "UpdateLinkDto": {
        "type": "object",
        "properties": {
          "github": {
            "type": "string",
            "format": "uri"
          },
          "figma": {
            "type": "string",
            "format": "uri"
          },
          "publicUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Attach": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "path": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "responsibleName": {
            "type": "string"
          },
          "responsibleRole": {
            "type": "string"
          },
          "photoId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateCompanyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "responsibleName": {
            "type": "string"
          },
          "responsibleRole": {
            "type": "string"
          }
        },
        "required": ["name", "description", "startDate", "responsibleName", "responsibleRole"]
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "linksId": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "coverId": {
            "type": "string",
            "format": "uuid"
          },
          "photoId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CreateLinkDto"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["name", "shortDescription", "description", "skills", "links"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
