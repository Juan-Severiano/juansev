/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type { DeleteCompanyIdMutationResponse, DeleteCompanyIdPathParams } from '../../types/DeleteCompanyId.ts'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const deleteCompanyIdMutationKey = () => [{ url: '/company/{id}' }] as const

export type DeleteCompanyIdMutationKey = ReturnType<typeof deleteCompanyIdMutationKey>

/**
 * @summary Deletar empresa
 * {@link /company/:id}
 */
export async function deleteCompanyId(id: DeleteCompanyIdPathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<DeleteCompanyIdMutationResponse, ResponseErrorConfig<Error>, unknown>({ method: 'DELETE', url: `/company/${id}`, ...requestConfig })
  return res
}

/**
 * @summary Deletar empresa
 * {@link /company/:id}
 */
export function useDeleteCompanyId<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<DeleteCompanyIdMutationResponse>,
      ResponseErrorConfig<Error>,
      { id: DeleteCompanyIdPathParams['id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteCompanyIdMutationKey()

  return useMutation<ResponseConfig<DeleteCompanyIdMutationResponse>, ResponseErrorConfig<Error>, { id: DeleteCompanyIdPathParams['id'] }, TContext>(
    {
      mutationFn: async ({ id }) => {
        return deleteCompanyId(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}